library(nycflights13)
nycflights13::airlines
nycflights13
nycflights13:
?nycflights13
?nycflights13
flights
flight <- flights
weather <-weather
planes <- planes
airports <- airports
airlines <- airlines
flights <- flights
remove(flight)
?nycflights13::flights
?nycflights13::flights
View(flights)
colnames(flights)
View(flights)
names(flights)
View(flights)
# Question 2
is.na(flights[1])
# Question 2
is.na(flights[])
# Question 2
is.na(flights)
# Question 2
na_flights <- is.na(flights)
na_flights_time['arr_time']
na_flights_time <- is.na(flights['arr_time'])
View(na_flights_time)
na_flights_dep_delay<- is.na(flights['dep_delay'])
na_flights_distance <- is.na(flights['distance'])
na_flights_duration <- is.na(flights{'air_time'})
na_flights_duration <- is.na(flights['air_time'])
na_flights_arr_delay <- is.na(flights['arr_delay'])
delete(liste=ls())
remove(liste=ls())
remove(list=ls())
na_flights_false <- c(na_flights_distance,na_flights_duration,na_flights_duration,na_flights_dep_delay,na_flights_arr_delay)
# import ####
# table mod
library(nycflights13)
# import tables
flights <- flights
weather <- weather
planes <- planes
airports <- airports
airlines <- airlines
# Question 1
colnames(flights)
names(flights)
# Question 2
# Distance - durée - retard ' depart ' et 'arrive'
na_flights <- is.na(flights)
na_flights_distance <- is.na(flights['distance'])
na_flights_duration <- is.na(flights['air_time'])
na_flights_dep_delay <- is.na(flights['dep_delay'])
na_flights_arr_delay <- is.na(flights['arr_delay'])
na_flights_false <- c(na_flights_distance,na_flights_duration,na_flights_duration,na_flights_dep_delay,na_flights_arr_delay)
View(na_flights)
#
# na_flights_false <- c(na_flights_distance,na_flights_duration,na_flights_duration,na_flights_dep_delay,na_flights_arr_delay)
na__flights <- for (i in na_flights){
if (i = FALSE){
remove(i)
}
}
na__flights <- for (i in na_flights){
if (i = FALSE)
remove(i)
}
na__flights <- for (i in na_flights){
if (i = FALSE){
remove(i)}
}
na__flights <- for (i in na_flights){
if (i = FALSE){
remove(i)}
}
na__flights <- for (i in na_flights){
if (i == FALSE){
remove(i)}
}
View(na_flights)
View(na_flights)
View(na_flights)
View(na_flights)
View(airports)
View(airports)
View(airports)
View(airlines)
View(airlines)
View(na_flights_distance)
View(na_flights_distance)
View(weather)
View(weather)
View(na_flights_duration)
View(na_flights_duration)
View(na_flights)
View(na_flights)
#
liste <- na_flights %>% is.na()
# import ####
library(dbplyr)
#
liste <- na_flights %>% is.na()
library(dplyr)
#
liste <- na_flights %>% is.na()
clean <-remove(list(ls()))
remove(list(ls()))
clean <- remove(list=ls())
library(dplyr)
# table mod
library(nycflights13)
# import tables
flights <- flights
weather <- weather
planes <- planes
airports <- airports
airlines <- airlines
# Question 1
colnames(flights)
names(flights)
# Question 2
# Distance - durée - retard ' depart ' et 'arrive'
na_flights <- is.na(flights)
na_flights_distance <- is.na(flights['distance'])
na_flights_duration <- is.na(flights['air_time'])
na_flights_dep_delay <- is.na(flights['dep_delay'])
na_flights_arr_delay <- is.na(flights['arr_delay'])
#
liste <- na_flights %>% is.na()
View(liste)
#
liste <- flights %>% is.na()
View(liste)
#
liste <- flights %>% is.na(recursive = FALSE)
#
liste <- flights %>% is.na(distance)
#
liste <- flights %>% is.na("distance")
#
liste <- flights %>% is.na("distance")
#
liste <- flights %>% rev(is.na())
#
liste <- flights %>% is.na()
rev(TRUE)
rev(TRUE)
count(na_flights_distance,FALSE)
na_flights_distance <- sum(is.na(flights['distance']))
na_flights_distance
na_flights_duration <- sum(is.na(flights['air_time']))
na_flights_duration <- sum(is.na(flights['air_time']))
na_flights_dep_delay <- sum(is.na(flights['dep_delay']))
na_flights_arr_delay <- sum(is.na(flights['arr_delay']))
na_flights_dep_delay <- sum(is.na(flights['dep_delay']))
#
liste <- flights %>% filter(is.na(distance)|(is.na(air_time))|(is.na(dep_delay))|(is.na(arr_delay)))
View(liste)
# Nouvelle liste
liste <- flights %>% filter(is.na(distance)|
(is.na(air_time))|
(is.na(dep_delay))
|(is.na(arr_delay)))
# Nouvelle liste
liste <- flights %>%
filter(is.na(distance)|
(is.na(air_time))|
(is.na(dep_delay))|
(is.na(arr_delay)))
View(flights)
delay_data <-  summarise(flights, dep_del_mean = mean(flights$dep_delay, na.rm = TRUE),
arr_del_mean = mean(flights$arr_delay, na.rm = TRUE),
dep_del_min = min(flights$dep_delay, na.rm = TRUE),
arr_del_min = min(flights$arr_delay, na.rm = TRUE),
dep_del_max = max(flights$dep_delay, na.rm = TRUE),
arr_del_max = max(flights$arr_delay, na.rm = TRUE))
View(delay_data)
View(flights)
View(flights)
airport_data <- flight %>%
group_by(origin) %>%
summarise(dep_del_mean = mean(flights$dep_delay, na.rm = TRUE),
arr_del_mean = mean(flights$arr_delay, na.rm = TRUE),
dep_del_min = min(flights$dep_delay, na.rm = TRUE),
arr_del_min = min(flights$arr_delay, na.rm = TRUE),
dep_del_max = max(flights$dep_delay, na.rm = TRUE),
arr_del_max = max(flights$arr_delay, na.rm = TRUE))
airport_data <- flights %>%
group_by(origin) %>%
summarise(dep_del_mean = mean(flights$dep_delay, na.rm = TRUE),
arr_del_mean = mean(flights$arr_delay, na.rm = TRUE),
dep_del_min = min(flights$dep_delay, na.rm = TRUE),
arr_del_min = min(flights$arr_delay, na.rm = TRUE),
dep_del_max = max(flights$dep_delay, na.rm = TRUE),
arr_del_max = max(flights$arr_delay, na.rm = TRUE))
View(airport_data)
airport_data <- flights %>%
group_by(origin) %>%
summarise(dep_del_mean = mean(dep_delay, na.rm = TRUE),
arr_del_mean = mean(arr_delay, na.rm = TRUE),
dep_del_min = min(dep_delay, na.rm = TRUE),
arr_del_min = min(arr_delay, na.rm = TRUE),
dep_del_max = max(dep_delay, na.rm = TRUE),
arr_del_max = max(arr_delay, na.rm = TRUE))
View(flights)
View(airport_data)
View(flights)
View(airport_data)
View(weather)
View(flights)
View(delay_data)
